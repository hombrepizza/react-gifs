{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","components/hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,uBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAMlB,UACA,6BAAKD,IACD,uBACIQ,KAAK,OACLC,MAAST,EACTU,SApBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,c,QCPlBG,EAAc,SAAC,GAAgB,IAAfC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,IAC/B,OACI,sBAAKC,UAAU,8CAAf,UAEI,qBAAKC,IAAKF,EAAKG,IAAMJ,IACrB,4BAAIA,Q,uBCLFK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEdN,EAFc,iDAEkCK,EAFlC,+DAGDE,MAAMP,GAHL,cAGdQ,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAGD,EAAIC,GACPf,MAAQc,EAAId,MACZC,IAAMa,EAAIE,OAAOC,iBAAiBhB,QAVtB,kBAcbW,GAda,4CAAH,sDCIRM,EAAU,SAAC,GAAc,IAAbZ,EAAY,EAAZA,SAAY,ECFT,SAACA,GAAY,IAAD,EAEVpB,mBAAS,CAC/ByB,KAAM,GACNQ,SAAQ,IAJwB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAqBpC,OAdAC,qBAAU,WAENjB,EAAQC,GACHiB,MAAK,SAAAC,GAEEH,EAAS,CACLV,KAAKa,EACLL,SAAQ,SAG1B,CAACb,IAIIc,EDhBwBK,CAAanB,GAAhCU,EAHqB,EAG1BL,KAAYQ,EAHc,EAGdA,QAEnB,OACI,qCACI,6BACKb,IAEJa,GAAW,2CACV,qBAAKjB,UAAU,YAAf,SAEMc,EAAOH,KAAI,SAAAC,GAAG,OACd,cAAC,EAAD,eAEIA,GADCA,EAAIC,aESdW,EA1BM,WAAK,IAAD,EAEexC,mBAAS,CAAC,WAFzB,mBAEdyC,EAFc,KAEF1C,EAFE,KAOrB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ0C,EAAWd,KAAI,SAAAP,GAAQ,OACvB,cAAC,EAAD,CAEAA,SAAYA,GADPA,Y,MCfzBsB,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.f14ab71f.chunk.js","sourcesContent":["import React,{useState}from 'react'\r\nimport Proptypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=>{\r\n        \r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats=>[inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n        <h1>{inputValue}</h1>\r\n            <input\r\n                type=\"text\"\r\n                value = {inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : Proptypes.func.isRequired\r\n}","\r\n\r\nexport const GifGridItem = ({title,url}) =>{\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUpBig\">\r\n\r\n            <img src={url} alt ={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n    \r\n}\r\n","\r\n\r\n export const getGifs = async(category)=>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=BXAhsvYiNarEZQsBcTPBRmGXIUvA973N`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id:img.id,\r\n            title : img.title,\r\n            url : img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n}","/* import { useState,useEffect } from \"react\" */\r\n/* import { getGifs } from \"../helpers/getGifs\" */\r\nimport { GifGridItem } from \"./GifGridItem\"\r\nimport { useFetchGifs } from \"./hooks/useFetchGifs\"\r\n\r\n\r\nexport const GifGrid = ({category})=>{\r\n\r\n    \r\n    const {data:images,loading}  = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>\r\n                {category}\r\n            </h3>\r\n            {loading && <p>Loading...</p>}\r\n           {  <div className=\"card-grid\">    \r\n                {\r\n                    images.map(img=>(\r\n                    <GifGridItem \r\n                    key={img.id}\r\n                    {...img}\r\n                    />\r\n                    ))\r\n                }\r\n            </div> }\r\n        </>\r\n    )\r\n\r\n}","import {useEffect, useState} from 'react'\r\nimport { getGifs } from '../../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category)=>{\r\n\r\n    const [state, setState] = useState({\r\n        data :[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n            .then(imgs=>{\r\n                \r\n                    setState({\r\n                        data:imgs,\r\n                        loading:false\r\n                    })\r\n            })\r\n    },[category])\r\n\r\n\r\n\r\n    return state;\r\n}","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nconst GifExpertApp = ()=>{\r\n\r\n    const [categories, setCategories] = useState(['Naruto'])\r\n    \r\n/*     const handleAdd=()=>{\r\n        setCategories([...categories,'Hunter x Hunter'])\r\n    } */\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map(category=>(\r\n                    <GifGrid \r\n                    key={category}\r\n                    category = {category}\r\n                    />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n \n  document.getElementById('root')\n);\n"],"sourceRoot":""}